#!/usr/bin/python
#
# DumbQ - A lightweight job scheduler
# Copyright (C) 2014-2015  Ioannis Charalampidis, PH-SFT, CERN

# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#

import argparse
import json
import sys
import os

# Include dumbq utilities library path
sys.path.append( os.path.join( os.path.dirname( os.path.realpath(__file__) ), "dumbq" ) )
import metrics

# Locate the dumbq web dir
wwwdir = "/var/www/html"
if 'DUMBQ_WWWROOT' in os.environ:
	wwwdir = os.environ['DUMBQ_WWWROOT']

# Parse arguments
parser = argparse.ArgumentParser(prog="dumbq-metrics", description="Helper utility to update the DumbQ public metrics database, accessible by the end-user application.")
parser.add_argument('--db', nargs="?", metavar="path", action='store', default="%s/metrics.json" % wwwdir,
                   help='Specify the location to the metrics database')
parser.add_argument('--del','-d', nargs=1, metavar="metric", action='append', dest='delete',
                   help='Delete a metric with the given name')
parser.add_argument('--set','-s', nargs=1, metavar="metric=N", action='append',
                   help='Set a particular metric to the specified value')
parser.add_argument('--add','-a', nargs=1, metavar="metric=N", action='append',
                   help='Increment a particular metric by a value')
parser.add_argument('--mul','-m', nargs=1, metavar="metric=N", action='append',
                   help='Multiply a particular metric by a value')
parser.add_argument('--avg','-V', nargs=1, metavar="metric=N", action='append',
                   help='Calculate the average of the specified value')
parser.add_argument('--avg-rotate', nargs=1, metavar="N", action='store', default=10, dest='ring',
                   help='Maximum length of average ring before rotation')
args = parser.parse_args()

# Configure metrics
metrics.configure(
	database=args.db,
	autocommit=False
	)

# Execute actions
try:
	error_context = ""

	if args.set:
		error_context = "set"
		for k,v in map(lambda x: str(x[0]).split("=",1), args.set):
			metrics.set(k,v)

	if args.delete:
		error_context = "del"
		for k in args.delete:
			metrics.delete(k[0])

	if args.add:
		error_context = "add"
		for k,v in map(lambda x: str(x[0]).split("=",1), args.add):
			metrics.add(k,v)

	if args.mul:
		error_context = "mul"
		for k,v in map(lambda x: str(x[0]).split("=",1), args.mul):
			metrics.multiply(k,v)

	if args.avg:
		error_context = "avg"
		for k,v in map(lambda x: str(x[0]).split("=",1), args.avg):
			metrics.average(k,v, ring=int(args.ring))

except ValueError as e:
	sys.stderr.write("ERROR: Invalid syntax in a '--%s' argument\n" % error_context)
	sys.exit(1)

# Commit database changes
metrics.commit()
